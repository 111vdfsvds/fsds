---
filters: 
  - lightbox
lightbox:
  match: auto
  effect: fade
  desc-position: right
  loop: false
---
# Welcome {.unnumbered}

Jon Reades[^index-1] <a href="https://twitter.com/jreades"><img src="img/Twitter social icons - circle - blue.png" height="17" /></a> <a href="https://www.github.com/jreades"><img src="img/GitHub-Mark-120px-plus.png" height="17" /></a>

[^index-1]: The Bartlett Centre for Advanced Spatial Analysis

<a href="https://www.ucl.ac.uk/bartlett/casa/"><img src="img/casa_logo.jpg" alt="CASA0013 course" width="120" align="right" style="margin: 0 1em 0 1em"/></a>

The *Foundations of Spatial Data Science* (FSDS) module is an optional element of CASA's [MSc programmes](https://www.ucl.ac.uk/bartlett/casa/programmes) and is intended provide an introduction to **doing data science in Python** for students who are new to programming or whose previous exposure to coding is fairly limited. The module seeks to enable students to access, understand, and communicate data in a spatial context. FSDS is *not* about pushing buttons, but about using logic, programming, and your growing analytical skills to tackle real-world problems in a creative, reproducible, and open manner.

**FSDS is _not_ easy**: in order to make the most of the module---and the foundation that it provides both for Term 2 modules on the MSc _and_ for post-Masters employment---you will need to work hard. This does not mean cramming before each practical, it means **practicing** between practicals, **doing the readings**, and **really watching the videos**. UCL expectations for a Masters-level module is 150 hours of study time: there are 4 hours of timetabled activity per week, and about an hour of videos to watch before each workshop, leaving up to 100 hours of 'self-study'. By implication, you should expect to spend about **1.25 hours/day** studying for this module: reading, coding, and (above all) practicing.

In exchange for your hard work, there is a pressing need for analysts, planners, and geographers able to *think* computationally using programming, analytics, and data manipulation skills that are anchored in the needs of policy-makers, businesses, and non-profits. There is a severe skills shortage in this domain across all sectors and, consequently, significant opportunity for those who can 'make sense' of data+code.

:::{.callout-warning}
## Changes before 22/23
- [ ] Point to cross-module content/recaps.
- [ ] Standardise delivery by TAs where practicals are TA-led (e.g. FSDS): clearer guidance on how to take students through each week.
- [ ] Clearer articulation of difficulty levels/targets for components *within* each week's practicals.
- [ ] Make links between lecture and practical content explicit; ideally trace a question through the whole process (*e.g.* "If I wanted to know if and where blue plaques are clustered in London how would I find out?")
:::

:::{.callout-important}
## To Dos

- [ ] Change all `height="\d+"` to `r-stretch` on images.
- [ ] Look at [this example](https://quarto.org/docs/presentations/revealjs/advanced.html#auto-animate) for vertically positioning things.
- [ ] Make link between videos+readings and practical *explicit*.
- [ ] [Shift away from .values](https://stackoverflow.com/questions/17241004/how-do-i-convert-a-pandas-series-or-index-to-a-numpy-array/54324513#54324513)
- [ ] Shift focus of (new) Week 9 & 10 to review/discussing the final assessment. Content still available to view/practice but not required/delivered.
- [ ] Require more active use of GitHub/Git -- a submission in which it's easy to automate checks that they've created a repo and populated it with the completed notebooks?
- [ ] Refresh Code Camp and make it more self-test oriented. Use the self-test to set expectations about level of effort/preparation required (and whether or not taking the module will be useful).
- [ ] Joint reading list?
:::

## Acknowledgements

While this module in indebted to both feedback from students and colleagues over the years, several people played a particularly outsize role in my thinking and deserve special acknowledgement:

1. [Dani](http://darribas.org) for help with Docker, geopandas, and any number of other new tools with which I've had to familiarise myself.
2. [Andy](https://www.ucl.ac.uk/bartlett/casa/people/dr-andrew-maclachlan) for somehow knowing about all kinds of new web apps that I could use to create 'books' to support the module.
3. The [Geocomp team](https://kingsgeocomputation.org) at [King's College London](https://www.kcl.ac.uk/geography), who supported my hare-brained scheme to teach Geography undergrads to code and offered all manner of useful feedback on what we could/could not feasibly cover.

