---
title: "Objects"
---

## Overview

This week we will see how Python actually works by looking beyond simple functions and methods, classes, and the outlines of Object Oriented Design and Programming (OOD/OOP). We'll also look at what to do when 'things go wrong', because they will, but sometimes we want that to blow up the application while other times we want Python to handle the 'exception' gracefully.

::: {.callout-important}
## Learning Objectives

1. 
2. 
3. 
::: 

This week deals with 'objects' and 'classes', which is fundamental to mastering the Python programming language: in Python, *everything* is an object, you just didn't need to know it until now. Understanding how classes and objects work is essential to using Python effectively, but it will also make you a better programmer in any language because it will help you to think about how data and code work _together_ to achieve your goals. 

### Lectures

Come to class prepared to present:

| Session | Video | Presentation | 
| :------ | :---- | :----------- | 
| Methods | [Video]({{< var vids.methods >}}) | [Slides](../lectures/4.1-Methods.qmd) | 
| Classes | [Video]({{< var vids.classes >}}) | [Slides](../lectures/4.2-Classes.qmd) | 
| Design | [Video]({{< var vids.design >}}) | [Slides](../lectures/4.3-Design.qmd) | 
| Exceptions | [Video]({{< var vids.exceptions >}}) | [Slides](../lectures/4.4-Errors.qmd) | 

### Other Preparatory Activities

- Come to class prepared to present/discuss:
  - @Cox:2016 <[PDF](http://insideairbnb.com/reports/how-airbnbs-data-hid-the-facts-in-new-york-city.pdf)>
  - @dignazio:2020, chap. 5, *Unicorns Janitors, Ninjas, Wizards, and Rock Stars* <[URL](https://ucl.primo.exlibrisgroup.com/discovery/fulldisplay?docid=alma9931206723604761&context=L&vid=44UCL_INST:UCL_VU2&lang=en&search_scope=UCLLibraryCatalogue&adaptor=Local%20Search%20Engine&isFrbr=true&tab=UCLLibraryCatalogue&query=any,contains,D%5C%27Ignazio%20Data%20Feminism&sortby=date_d&facet=frbrgroupid,include,9041340239229546206&offset=0)>
- We'll aim to do the 'Student Dialogue' [Mentimeter poll](https://moodle.ucl.ac.uk/mod/url/view.php?id=4389691&forceview=1) at the start of class.

## Practical

This practical will...

::: {.callout-tip}
## Connections

The practical focusses on:

- [ ] Creating functions to perform repetitive tasks
- [ ] Packaging these functions up and accessing via namespace 
- [ ] Exploring the dictionary-of-lists approach to storing data
- [ ] Implementing a few simple classes so that you understand the basics of how they work
:::

To access the practical:

1. [Preview on GitHub]({{< var module.prac > >}}practicals/Practical-04-Objects.ipynb)
2. [Download the Notebook]({{< var module.raw >}}practicals/Practical-04-Objects.ipynb)

## References