# Setting Up

This week is focussed on getting you set up for the rest of the course in terms of having the requisite software installed and accounts configured so that you can keep track of your work, write code, and track changes.

## Preparation

Although none of these activities are *compulsory* in advance of the first session, getting your computer set up to code *does* take time and most of these preparatory activites are fairly straightforward... with a few exceptions noted below. If you are able to get these tools installed in advance then you can focus on the taught content in the first two practicals rather than also wrestling with an installation. This will also give us more time to help you if you discover that you're one of the unlucky people for whom installation is a lot more work!

### Computer Health Check-up

Please ensure that your computer is fully up-to-date with Operating System and application updates. Also, please make a note of the following three things:

- What Operating System and Version is your _main_ computer running? [Help for Windows](https://support.microsoft.com/en-gb/help/13443/windows-which-version-am-i-running). [Help for Mac](https://support.apple.com/en-gb/HT201260).
- How much RAM does your _main_ computer have? [Help for Windows](https://www.howtogeek.com/435644/how-to-see-how-much-ram-is-in-your-pc-and-its-speed/). [Help
for Mac](https://www.macworld.co.uk/how-to/mac/much-ram-need-more-3793418/).
- How much free disk space does your _main_ computer have? [Help for Windows](ht
tps://www.lifewire.com/how-to-check-free-hard-drive-space-in-windows-2619187). [
Help for Mac](https://www.macworld.com/article/2972775/how-to-check-a-mac-free-h
ard-drive-space.html).

This information will be very useful during the first few weeks when you are mos
t likely to encounter problems with the programming environment. *Generally* spe
aking, the things to watch out for are:

1. Your operating system is Windows 10 Home, or something older than Windows 10
(*e.g.* Windows 8 or ealier), or MacOS older than 10.13 (High Sierra).
2. Your computer has less than 8GB of RAM.
3. Your computer has less than 15GB of free disk space remaining.

### Installing Command Line Tools

If you want to get a *little* bit ahead of things, then you should try to instal
l one of:

- **Mac:** the Xcode Command Line Tools, which can be done [directly from the Te
rminal](https://osxdaily.com/2014/02/12/install-command-line-tools-mac-os-x/).
- **Windows:** WSL 2, for which you can follow [these instructions](https://www.
digitalocean.com/community/tutorials/how-to-install-the-windows-subsystem-for-li
nux-2-on-microsoft-windows-10).

### Installing the Programming Environment

If you want to get even *more* ahead of things, then the single most important t
hing you can do is to install the programming environment. This is the stage whe
re you're most likely to encounter problems that will need our assistance, so kn
owing that you need our help here means that you ask for it much sooner!

We previously experimented with four approaches to installation: VirtualBox; Vag
rant; Docker; and Anaconda Python directly. Each of these has pros and cons, but
 after careful consideration we have come to the conclusion that **Docker** is t
he most robust way to ensure a consistent experience in which all students end u
p with the same versions of each library, difficult-to-diagnose hardware/OS issu
es are minimised, and running/recovery is the most straightforward. Successful t
ests have been conducted using the **Docker**-based installation approach using
macOS and Windows operating systems, however some small issues have arise which
we plan to solve soon, so don't despair.

__To install the Programming Environment follow the instructions in Practical 1
[here](https://github.com/jreades/fsds/blob/master/practicals/Practical-01-Getti
ng_Started.ipynb)__ (Task 5, but 4 and 3 are recommended)

#### Known issues

We've found issues running Docker using Windows that when closing down the Docke
r image the files you created are not saved and you cannot access any files on y
our current system. If this appears for you, a solution that could work is repla
cing:

`-v "$WORK_DIR":/home/jovyan/work`

with:

`--mount type=bind,source="$(pwd)",target=/home/jovyan/work`

and trying to load up the Docker image again. In doing so you should be able to
see any existing files that you have, while also being able to save any files th
at you create in JupyterLab.

## Workshop

In this weeks workshop we will introduce modules aims, learning outcomes and exp
ectations with a general introduction to the course

N.B. Workshop material and all other resources for this module are on the Moodle

### Practical

If you have already installed the programming environment then the practical can
 be downloaded from [GitHub](https://github.com/jreades/i2p/blob/master/practica
ls/Practical-01-Getting_Started.ipynb) (Click on `Raw` and then `Save File As...
`) and viewed by saving it to your `Documents/CASA/...` folder, or you can just
[view it online](https://github.com/jreades/i2p/blob/master/practicals/Practical
-01-Getting_Started.ipynb) in your web browser.

